<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sai.mapper.ProblemMapper" >
  <resultMap id="BaseResultMap" type="cn.sai.entity.Problem" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="input" property="input" jdbcType="VARCHAR" />
    <result column="output" property="output" jdbcType="VARCHAR" />
    <result column="time_limit" property="timeLimit" jdbcType="INTEGER" />
    <result column="memory_limit" property="memoryLimit" jdbcType="INTEGER" />
    <result column="submit_times" property="submitTimes" jdbcType="INTEGER" />
    <result column="ac_rate" property="acRate" jdbcType="REAL" />
  </resultMap>

  <resultMap id="WithExplanation" type="cn.sai.entity.ProblemDto">
    <result column="pid" property="problem.pid" jdbcType="INTEGER" />
    <result column="title" property="problem.title" jdbcType="VARCHAR" />
    <result column="description" property="problem.description" jdbcType="VARCHAR" />
    <result column="input" property="problem.input" jdbcType="VARCHAR" />
    <result column="output" property="problem.output" jdbcType="VARCHAR" />
    <result column="time_limit" property="problem.timeLimit" jdbcType="INTEGER" />
    <result column="memory_limit" property="problem.memoryLimit" jdbcType="INTEGER" />
    <result column="submit_times" property="problem.submitTimes" jdbcType="INTEGER" />
    <result column="ac_rate" property="problem.acRate" jdbcType="REAL" />
    <collection property="explanations" column="pid" select="cn.sai.mapper.ExplanationMapper.selectByPid"/>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pid, title, description, input, output, time_limit, memory_limit, submit_times, ac_rate
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from t_problem
  </select>
  <select id="selectDtoAll" resultMap="WithExplanation">
    select * from t_problem
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.sai.entity.ProblemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_problem
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_problem
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sai.entity.ProblemExample" >
    delete from t_problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sai.entity.Problem" >
    insert into t_problem (pid, title, description, 
      input, output, time_limit, 
      memory_limit, submit_times, ac_rate
      )
    values (#{pid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{input,jdbcType=VARCHAR}, #{output,jdbcType=VARCHAR}, #{timeLimit,jdbcType=INTEGER}, 
      #{memoryLimit,jdbcType=INTEGER}, #{submitTimes,jdbcType=INTEGER}, #{acRate,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.sai.entity.Problem" >
    insert into t_problem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="input != null" >
        input,
      </if>
      <if test="output != null" >
        output,
      </if>
      <if test="timeLimit != null" >
        time_limit,
      </if>
      <if test="memoryLimit != null" >
        memory_limit,
      </if>
      <if test="submitTimes != null" >
        submit_times,
      </if>
      <if test="acRate != null" >
        ac_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="input != null" >
        #{input,jdbcType=VARCHAR},
      </if>
      <if test="output != null" >
        #{output,jdbcType=VARCHAR},
      </if>
      <if test="timeLimit != null" >
        #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        #{memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="submitTimes != null" >
        #{submitTimes,jdbcType=INTEGER},
      </if>
      <if test="acRate != null" >
        #{acRate,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sai.entity.ProblemExample" resultType="java.lang.Integer" >
    select count(*) from t_problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_problem
    <set >
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.input != null" >
        input = #{record.input,jdbcType=VARCHAR},
      </if>
      <if test="record.output != null" >
        output = #{record.output,jdbcType=VARCHAR},
      </if>
      <if test="record.timeLimit != null" >
        time_limit = #{record.timeLimit,jdbcType=INTEGER},
      </if>
      <if test="record.memoryLimit != null" >
        memory_limit = #{record.memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="record.submitTimes != null" >
        submit_times = #{record.submitTimes,jdbcType=INTEGER},
      </if>
      <if test="record.acRate != null" >
        ac_rate = #{record.acRate,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_problem
    set pid = #{record.pid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      input = #{record.input,jdbcType=VARCHAR},
      output = #{record.output,jdbcType=VARCHAR},
      time_limit = #{record.timeLimit,jdbcType=INTEGER},
      memory_limit = #{record.memoryLimit,jdbcType=INTEGER},
      submit_times = #{record.submitTimes,jdbcType=INTEGER},
      ac_rate = #{record.acRate,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sai.entity.Problem" >
    update t_problem
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="input != null" >
        input = #{input,jdbcType=VARCHAR},
      </if>
      <if test="output != null" >
        output = #{output,jdbcType=VARCHAR},
      </if>
      <if test="timeLimit != null" >
        time_limit = #{timeLimit,jdbcType=INTEGER},
      </if>
      <if test="memoryLimit != null" >
        memory_limit = #{memoryLimit,jdbcType=INTEGER},
      </if>
      <if test="submitTimes != null" >
        submit_times = #{submitTimes,jdbcType=INTEGER},
      </if>
      <if test="acRate != null" >
        ac_rate = #{acRate,jdbcType=REAL},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sai.entity.Problem" >
    update t_problem
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      input = #{input,jdbcType=VARCHAR},
      output = #{output,jdbcType=VARCHAR},
      time_limit = #{timeLimit,jdbcType=INTEGER},
      memory_limit = #{memoryLimit,jdbcType=INTEGER},
      submit_times = #{submitTimes,jdbcType=INTEGER},
      ac_rate = #{acRate,jdbcType=REAL}
    where pid = #{pid,jdbcType=INTEGER}
  </update>

  <!-- 联合标签查询 -->
  <select id="selectByTagId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from t_problem p left join t_problem_tag t on p.pid = t.pid
    where rid = #{tid,jdbcType=INTEGER}
  </select>


</mapper>